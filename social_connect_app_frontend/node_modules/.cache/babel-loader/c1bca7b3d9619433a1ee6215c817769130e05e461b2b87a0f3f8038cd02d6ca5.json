{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Manav\\\\Desktop\\\\social_connect\\\\social_connect_app_frontend\\\\src\\\\component\\\\Comment\\\\Comment.comonent.jsx\",\n  _s = $RefreshSig$();\nimport { PostAddSharp } from \"@material-ui/icons\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\nimport { commentActions } from \"../../store/CommentSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comment = props => {\n  _s();\n  const count = useSelector(state => state.comment.vcount);\n  console.log(props.keyval);\n  const location = useLocation();\n  const state = location.state;\n  console.log(state);\n  const commentdetails = useSelector(state => state.comment.commentdata);\n  const [comment, setComment] = useState();\n  const randomNumberInRange = (min, max) => {\n    return Math.round(Math.random() * (max - min + 1)) + min;\n  };\n  const handleInput = e => {\n    try {\n      setComment(e.target.value);\n      dispatch(commentActions.setUserComment(e.target.value));\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  async function handleSubmit() {\n    try {\n      dispatch(commentActions.setCommentId(randomNumberInRange(1, 100)));\n      dispatch(commentActions.setCommentUsername(\"iloveulaav\"));\n      dispatch(commentActions.setCommentPostid(state));\n      const commenturl = `http://localhost:8000/api/comments/`;\n      const commentdata1 = await axios.post(commenturl, commentdetails).then(response => {\n        console.log(response.status);\n      });\n      console.log(commentdetails);\n    } catch (e) {\n      console.log(e);\n    }\n  }\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: comment,\n      onChange: handleInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        \"height\": \"120px\",\n        width: \"120px\"\n      },\n      onClick: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        dispatch(commentActions.setCount());\n      },\n      children: \"COunt\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(Comment, \"n8bh1NbOABzTRgFV/jILTb/BoAc=\", false, function () {\n  return [useSelector, useLocation, useSelector, useDispatch];\n});\n_c = Comment;\nexport default Comment;\nvar _c;\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"names":["PostAddSharp","axios","useEffect","useState","useDispatch","useSelector","useLocation","commentActions","Comment","props","count","state","comment","vcount","console","log","keyval","location","commentdetails","commentdata","setComment","randomNumberInRange","min","max","Math","round","random","handleInput","e","target","value","dispatch","setUserComment","handleSubmit","setCommentId","setCommentUsername","setCommentPostid","commenturl","commentdata1","post","then","response","status","width","setCount"],"sources":["C:/Users/Manav/Desktop/social_connect/social_connect_app_frontend/src/component/Comment/Comment.comonent.jsx"],"sourcesContent":["import { PostAddSharp } from \"@material-ui/icons\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { commentActions } from \"../../store/CommentSlice\";\r\n\r\n\r\n\r\nconst Comment = (props) => {\r\nconst count = useSelector((state)=>state.comment.vcount)\r\nconsole.log(props.keyval);\r\nconst location = useLocation();\r\nconst state = location.state;\r\nconsole.log(state)\r\n\r\nconst commentdetails = useSelector((state)=>state.comment.commentdata)\r\n\r\nconst [comment,setComment] = useState();\r\nconst randomNumberInRange=(min, max)=> {\r\n  return Math.round(Math.random() * (max - min + 1)) + min;\r\n}\r\nconst handleInput = (e)=>{\r\n    try{\r\n      setComment(e.target.value)\r\n      dispatch(commentActions.setUserComment(e.target.value));\r\n    }\r\n    catch(e){\r\n      console.log(e);\r\n    }\r\n}\r\n\r\n  async function handleSubmit() {\r\n    try {\r\n      dispatch(commentActions.setCommentId(randomNumberInRange(1,100)));\r\n      dispatch(commentActions.setCommentUsername(\"iloveulaav\"));\r\n      dispatch(commentActions.setCommentPostid(state));\r\n      const  commenturl = `http://localhost:8000/api/comments/`;\r\n      const commentdata1 = await axios.post(commenturl,commentdetails).then(response => {\r\n            console.log(response.status);\r\n      })\r\n      console.log(commentdetails);\r\n    }\r\n    catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\nconst dispatch = useDispatch();\r\n\r\n  return (\r\n    <div >\r\n        <input type=\"text\" value={comment} onChange={handleInput}/>\r\n        <button style={{\"height\":\"120px\",width:\"120px\"}}\r\n        onClick={handleSubmit}></button>\r\n        \r\n\r\n        <h1>{count}</h1>\r\n        <button onClick={()=>{\r\n          dispatch(commentActions.setCount());\r\n        }}>COunt</button>\r\n      \r\n    </div>\r\n  )\r\n}\r\nexport default Comment;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}