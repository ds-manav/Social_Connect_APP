{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/src/component/Feed/FeedBox.jsx\",\n  _s = $RefreshSig$();\nimport { Avatar } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { postActions } from \"../../store/PostFeedSlice\";\nimport \"./FeedBox.style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FeedBox(props) {\n  _s();\n  const postdetails = useSelector(state => state.post.postdata);\n  console.log(props.userid);\n  const dispatch = useDispatch();\n  const randomNumberInRange = (min, max) => {\n    return Math.round(Math.random() * (max - min + 1)) + min;\n  };\n  async function handlePosts() {\n    try {\n      await dispatch(postActions.setPostId(randomNumberInRange(1, 100)));\n      await dispatch(postActions.setPostUsername(props.username));\n      await dispatch(postActions.setPostUserId(props.userid));\n      const posturl = `http://localhost:8000/api/posts/`;\n      const postdata = await axios.post(posturl, postdetails).then(response => {});\n    } catch (e) {\n      console.log(e);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"feedBox\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feedBox__info\",\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        src: \"https://images-platform.99static.com//_QXV_u2KU7-ihGjWZVHQb5d-yVM=/238x1326:821x1909/fit-in/500x500/99designs-contests-attachments/119/119362/attachment_119362573\",\n        className: \"feedBox__infoAvatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          fontFamily: \"inherit\"\n        },\n        children: props.username ? props.username : props.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feedBox__quora\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: postdetails.feed,\n        placeholder: \"post something you feel,think ..........\",\n        onChange: e => {\n          dispatch(postActions.setFeed(e.target.value));\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePosts,\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(FeedBox, \"9r7ipgSeEqIYqyUO9RQ1g1nCV/s=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = FeedBox;\nvar _c;\n$RefreshReg$(_c, \"FeedBox\");","map":{"version":3,"names":["Avatar","axios","React","useDispatch","useSelector","postActions","FeedBox","props","postdetails","state","post","postdata","console","log","userid","dispatch","randomNumberInRange","min","max","Math","round","random","handlePosts","setPostId","setPostUsername","username","setPostUserId","posturl","then","response","e","fontFamily","email","feed","setFeed","target","value"],"sources":["/usr/src/app/src/component/Feed/FeedBox.jsx"],"sourcesContent":["import { Avatar } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { postActions } from \"../../store/PostFeedSlice\";\r\nimport \"./FeedBox.style.css\";\r\n\r\nexport default function FeedBox(props) {\r\n   const postdetails = useSelector((state)=>state.post.postdata);\r\n   console.log(props.userid);\r\n   const dispatch = useDispatch();\r\n   const randomNumberInRange=(min, max)=> {\r\n    return Math.round(Math.random() * (max - min + 1)) + min;\r\n  }\r\n\r\n   async function handlePosts() {\r\n    try {\r\n        await dispatch(postActions.setPostId(randomNumberInRange(1,100)));\r\n        await dispatch(postActions.setPostUsername(props.username));\r\n        await dispatch(postActions.setPostUserId(props.userid));\r\n      const posturl = `http://localhost:8000/api/posts/`;\r\n      const postdata = await axios.post(posturl,postdetails).then(response => {\r\n\r\n      })\r\n    }\r\n    catch (e) {\r\n      console.log(e);\r\n    }\r\n}\r\n\r\n\r\n   \r\n  return (\r\n    <div className=\"feedBox\">\r\n      <div className=\"feedBox__info\">\r\n        <Avatar\r\n          src={\r\n               \"https://images-platform.99static.com//_QXV_u2KU7-ihGjWZVHQb5d-yVM=/238x1326:821x1909/fit-in/500x500/99designs-contests-attachments/119/119362/attachment_119362573\"\r\n          }\r\n          className=\"feedBox__infoAvatar\"\r\n        />\r\n        <h3 style={{fontFamily:\"inherit\"}}>{props.username ? props.username : props.email}</h3>\r\n      </div>\r\n      <div className=\"feedBox__quora\">\r\n        < textarea value ={postdetails.feed} placeholder={\"post something you feel,think ..........\"} onChange={(e)=>{\r\n            dispatch(postActions.setFeed(e.target.value))\r\n        }}></textarea>\r\n        <button onClick={handlePosts}>Post</button>\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,SAASA,MAAM,QAAQ,mBAAmB;AAC1C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,WAAW,QAAQ,2BAA2B;AACvD,OAAO,qBAAqB;AAAC;AAE7B,eAAe,SAASC,OAAO,CAACC,KAAK,EAAE;EAAA;EACpC,MAAMC,WAAW,GAAGJ,WAAW,CAAEK,KAAK,IAAGA,KAAK,CAACC,IAAI,CAACC,QAAQ,CAAC;EAC7DC,OAAO,CAACC,GAAG,CAACN,KAAK,CAACO,MAAM,CAAC;EACzB,MAAMC,QAAQ,GAAGZ,WAAW,EAAE;EAC9B,MAAMa,mBAAmB,GAAC,CAACC,GAAG,EAAEC,GAAG,KAAI;IACtC,OAAOC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,IAAIH,GAAG,GAAGD,GAAG,GAAG,CAAC,CAAC,CAAC,GAAGA,GAAG;EAC1D,CAAC;EAEA,eAAeK,WAAW,GAAG;IAC5B,IAAI;MACA,MAAMP,QAAQ,CAACV,WAAW,CAACkB,SAAS,CAACP,mBAAmB,CAAC,CAAC,EAAC,GAAG,CAAC,CAAC,CAAC;MACjE,MAAMD,QAAQ,CAACV,WAAW,CAACmB,eAAe,CAACjB,KAAK,CAACkB,QAAQ,CAAC,CAAC;MAC3D,MAAMV,QAAQ,CAACV,WAAW,CAACqB,aAAa,CAACnB,KAAK,CAACO,MAAM,CAAC,CAAC;MACzD,MAAMa,OAAO,GAAI,kCAAiC;MAClD,MAAMhB,QAAQ,GAAG,MAAMV,KAAK,CAACS,IAAI,CAACiB,OAAO,EAACnB,WAAW,CAAC,CAACoB,IAAI,CAACC,QAAQ,IAAI,CAExE,CAAC,CAAC;IACJ,CAAC,CACD,OAAOC,CAAC,EAAE;MACRlB,OAAO,CAACC,GAAG,CAACiB,CAAC,CAAC;IAChB;EACJ;EAIE,oBACE;IAAK,SAAS,EAAC,SAAS;IAAA,wBACtB;MAAK,SAAS,EAAC,eAAe;MAAA,wBAC5B,QAAC,MAAM;QACL,GAAG,EACE,oKACJ;QACD,SAAS,EAAC;MAAqB;QAAA;QAAA;QAAA;MAAA,QAC/B,eACF;QAAI,KAAK,EAAE;UAACC,UAAU,EAAC;QAAS,CAAE;QAAA,UAAExB,KAAK,CAACkB,QAAQ,GAAGlB,KAAK,CAACkB,QAAQ,GAAGlB,KAAK,CAACyB;MAAK;QAAA;QAAA;QAAA;MAAA,QAAM;IAAA;MAAA;MAAA;MAAA;IAAA,QACnF,eACN;MAAK,SAAS,EAAC,gBAAgB;MAAA,wBAC7B;QAAW,KAAK,EAAGxB,WAAW,CAACyB,IAAK;QAAC,WAAW,EAAE,0CAA2C;QAAC,QAAQ,EAAGH,CAAC,IAAG;UACzGf,QAAQ,CAACV,WAAW,CAAC6B,OAAO,CAACJ,CAAC,CAACK,MAAM,CAACC,KAAK,CAAC,CAAC;QACjD;MAAE;QAAA;QAAA;QAAA;MAAA,QAAY,eACd;QAAQ,OAAO,EAAEd,WAAY;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAc;IAAA;MAAA;MAAA;MAAA;IAAA,QAEvC;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,GA7CuBhB,OAAO;EAAA,QACRF,WAAW,EAEdD,WAAW;AAAA;AAAA,KAHPG,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}