{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Manav\\\\Desktop\\\\social_connect\\\\social_connect_app_frontend\\\\src\\\\component\\\\Post\\\\Post.component.jsx\",\n  _s = $RefreshSig$();\nimport { Avatar } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./Post.style.css\";\nimport ArrowUpwardOutlinedIcon from \"@material-ui/icons/ArrowUpwardOutlined\";\nimport ArrowDownwardOutlinedIcon from \"@material-ui/icons/ArrowDownwardOutlined\";\nimport RepeatOutlinedIcon from \"@material-ui/icons/RepeatOutlined\";\nimport ChatBubbleOutlineOutlinedIcon from \"@material-ui/icons/ChatBubbleOutlineOutlined\";\nimport { MoreHorizOutlined, ShareOutlined } from \"@material-ui/icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Modal from \"react-modal\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Post() {\n  _s();\n  //   const user = useSelector(selectUser);\n  //   const dispatch = useDispatch();\n  const [list_posts, setList_Posts] = useState([{\n    \"postid\": 1,\n    \"feed\": \"sdddddddddddd\",\n    \"username\": \"manav\",\n    \"commet\": \"nice\"\n  }]);\n  const [comment, setComment] = useState(\"\");\n  const [getComment, setGetComments] = useState([]);\n  // useEffect(()=>{\n  //   async function posts(){\n  //     const posturl = `http://localhost:8000/api/posts/`;\n  //     const postdata = await axios.get(posturl).then(response =>{\n  //            setList_Posts(response.data)\n  //     })\n\n  //   }\n  //   posts();\n  // })\n\n  const handleComment = async () => {\n    const commenturl = `http://localhost:8000/api/comments/`;\n    // const commentdata = await axios.post(commenturl,).then(response => {\n    //   console.log(response.data);\n    // })\n  };\n\n  const [IsmodalOpen, setIsModalOpen] = useState(false);\n  setComment(\"\");\n  setIsModalOpen(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post__info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post__body\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post__question\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"ques\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsModalOpen(true),\n            className: \"post__btnAnswer\",\n            children: \"Answer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Modal, {\n            isOpen: IsmodalOpen,\n            onRequestClose: () => setIsModalOpen(false),\n            shouldCloseOnOverlayClick: false,\n            style: {\n              overlay: {\n                width: 680,\n                height: 550,\n                backgroundColor: \"rgba(0,0,0,0.8)\",\n                zIndex: \"1000\",\n                top: \"50%\",\n                left: \"50%\",\n                marginTop: \"-250px\",\n                marginLeft: \"-350px\"\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal__question\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                children: \"quest\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"asked by\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 27\n                }, this), \" \", \"\", \"on\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal__answer\",\n              children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n                value: comment,\n                onChange: e => setComment(e.target.value),\n                placeholder: \"Enter Your Answer\",\n                type: \"text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal__button\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"cancle\",\n                onClick: () => setIsModalOpen(false),\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"sumbit\",\n                onClick: handleComment,\n                className: \"add\",\n                children: \"Add Answer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post__footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post__footerAction\",\n          children: [/*#__PURE__*/_jsxDEV(ArrowUpwardOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(ArrowDownwardOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(RepeatOutlinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(ChatBubbleOutlineOutlinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post__footerLeft\",\n          children: [/*#__PURE__*/_jsxDEV(ShareOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(MoreHorizOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(Post, \"gygnf2gQG7VyZMYWqoKXpSwt+5Q=\");\n_c = Post;\nexport default Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["Avatar","React","useEffect","useState","ArrowUpwardOutlinedIcon","ArrowDownwardOutlinedIcon","RepeatOutlinedIcon","ChatBubbleOutlineOutlinedIcon","MoreHorizOutlined","ShareOutlined","useDispatch","useSelector","Modal","axios","Post","list_posts","setList_Posts","comment","setComment","getComment","setGetComments","handleComment","commenturl","IsmodalOpen","setIsModalOpen","overlay","width","height","backgroundColor","zIndex","top","left","marginTop","marginLeft","e","target","value"],"sources":["C:/Users/Manav/Desktop/social_connect/social_connect_app_frontend/src/component/Post/Post.component.jsx"],"sourcesContent":["import { Avatar } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./Post.style.css\";\r\nimport ArrowUpwardOutlinedIcon from \"@material-ui/icons/ArrowUpwardOutlined\";\r\nimport ArrowDownwardOutlinedIcon from \"@material-ui/icons/ArrowDownwardOutlined\";\r\nimport RepeatOutlinedIcon from \"@material-ui/icons/RepeatOutlined\";\r\nimport ChatBubbleOutlineOutlinedIcon from \"@material-ui/icons/ChatBubbleOutlineOutlined\";\r\nimport { MoreHorizOutlined, ShareOutlined } from \"@material-ui/icons\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport axios from \"axios\";\r\n\r\nfunction Post() {\r\n  //   const user = useSelector(selectUser);\r\n  //   const dispatch = useDispatch();\r\n  const [list_posts, setList_Posts] = useState([{\r\n    \"postid\": 1, \"feed\": \"sdddddddddddd\",\"username\": \"manav\", \"commet\": \"nice\"\r\n  }])\r\n\r\n  const [comment, setComment] = useState(\"\");\r\n  const [getComment, setGetComments] = useState([]);\r\n  // useEffect(()=>{\r\n  //   async function posts(){\r\n  //     const posturl = `http://localhost:8000/api/posts/`;\r\n  //     const postdata = await axios.get(posturl).then(response =>{\r\n  //            setList_Posts(response.data)\r\n  //     })\r\n\r\n  //   }\r\n  //   posts();\r\n  // })\r\n\r\n  const handleComment = async () => {\r\n    const commenturl = `http://localhost:8000/api/comments/`;\r\n    // const commentdata = await axios.post(commenturl,).then(response => {\r\n    //   console.log(response.data);\r\n    // })\r\n\r\n  }\r\n\r\n\r\n\r\n  const [IsmodalOpen, setIsModalOpen] = useState(false);\r\n\r\n  setComment(\"\");\r\n  setIsModalOpen(false);\r\n  \r\n  return (\r\n    <div className=\"post\">\r\n      <div>\r\n        {/* { */}\r\n          {/* list_posts.map((post) => { */}\r\n            {/* return ( */}\r\n              {/* <div> */}\r\n                <div className=\"post__info\">\r\n                  {/* <Avatar\r\n          src={\r\n          \"https://images-platform.99static.com//_QXV_u2KU7-ihGjWZVHQb5d-yVM=/238x1326:821x1909/fit-in/500x500/99designs-contests-attachments/119/119362/attachment_119362573\"\r\n          }\r\n        /> */}\r\n                  {/* <h4>{users.displayName ? users.displayName : users.email}</h4> */}\r\n                  {/* <small>{new Date(timestamp?.toDate()).toLocaleString()}</small> */}\r\n                </div>\r\n                <div className=\"post__body\">\r\n                  <div className=\"post__question\">\r\n                    <p>ques</p>\r\n                    <button\r\n                      onClick={() => setIsModalOpen(true)}\r\n                      className=\"post__btnAnswer\"\r\n                    >\r\n                      Answer\r\n                    </button>\r\n                    <Modal\r\n                      isOpen={IsmodalOpen}\r\n                      onRequestClose={() => setIsModalOpen(false)}\r\n                      shouldCloseOnOverlayClick={false}\r\n                      style={{\r\n                        overlay: {\r\n                          width: 680,\r\n                          height: 550,\r\n                          backgroundColor: \"rgba(0,0,0,0.8)\",\r\n                          zIndex: \"1000\",\r\n                          top: \"50%\",\r\n                          left: \"50%\",\r\n                          marginTop: \"-250px\",\r\n                          marginLeft: \"-350px\",\r\n                        },\r\n                      }}\r\n                    >\r\n                      <div className=\"modal__question\">\r\n                        <h1>quest</h1>\r\n                        <p>\r\n                          asked by{\" \"}\r\n                          <span className=\"name\">\r\n                            {/* {users.displayName ? users.displayName : users.email} */}\r\n                          </span>{\" \"}\r\n                          {\"\"}\r\n                          on{\" \"}\r\n                          <span className=\"name\">\r\n                            {/* {new Date(timestamp?.toDate()).toLocaleString()} */}\r\n                          </span>\r\n                        </p>\r\n                      </div>\r\n                      <div className=\"modal__answer\">\r\n                        <textarea\r\n                          value={comment}\r\n                          onChange={(e) => setComment(e.target.value)}\r\n                          placeholder=\"Enter Your Answer\"\r\n                          type=\"text\"\r\n                        />\r\n                      </div>\r\n                      <div className=\"modal__button\">\r\n                        <button className=\"cancle\" onClick={() => setIsModalOpen(false)}>\r\n                          Cancel\r\n                        </button>\r\n                        <button type=\"sumbit\" onClick={handleComment} className=\"add\">\r\n                          Add Answer\r\n                        </button>\r\n                      </div>\r\n                    </Modal>\r\n                  </div>\r\n                  {/* <img src={imageUrl} alt=\"\" /> */}\r\n                </div>\r\n                <div className=\"post__footer\">\r\n                  <div className=\"post__footerAction\">\r\n                    <ArrowUpwardOutlinedIcon />\r\n                    <ArrowDownwardOutlinedIcon />\r\n                  </div>\r\n\r\n                  <RepeatOutlinedIcon />\r\n                  <ChatBubbleOutlineOutlinedIcon />\r\n                  <div className=\"post__footerLeft\">\r\n                    <ShareOutlined />\r\n                    <MoreHorizOutlined />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            {/* ) */}\r\n          {/* }) */}\r\n        {/* } */}\r\n      {/* </div> */}\r\n\r\n      {/* <div className=\"post__answer\">\r\n          {getComment.map(({ id, answers }) => (\r\n            <p key={id} style={{ position: \"relative\", paddingBottom: \"5px\" }}>\r\n              {Id === answers.questionId ? (\r\n                <span>\r\n                  {answers.answer}\r\n                  <br />\r\n                  <span\r\n                    style={{\r\n                      position: \"absolute\",\r\n                      color: \"gray\",\r\n                      fontSize: \"small\",\r\n                      display: \"flex\",\r\n                      right: \"0px\",\r\n                    }}\r\n                  > */}\r\n      {/* <span style={{ color: \"#b92b27\" }}> */}\r\n      {/* {answers.user.displayName\r\n                        ? answers.user.displayName\r\n                        : answers.user.email}{\" \"}\r\n                      on{\" \"} */}\r\n      {/* {new Date(answers.timestamp?.toDate()).toLocaleString()} */}\r\n      {/* </span>\r\n                  </span>\r\n                </span>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </p>\r\n          ))} */}\r\n      {/* </div> */}\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Post;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}