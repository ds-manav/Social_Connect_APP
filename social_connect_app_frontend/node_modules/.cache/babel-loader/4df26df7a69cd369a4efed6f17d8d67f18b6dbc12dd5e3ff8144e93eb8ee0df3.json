{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst commentSlice = createSlice({\n  name: \"comment\",\n  initialState: {\n    commentdata: {\n      id: 0,\n      username: \"\",\n      \"postid\": 10,\n      comment: \"\"\n    },\n    count: 0\n  },\n  reducers: {\n    setCommentId(state, action) {\n      state.commentdata.id = action.payload;\n    },\n    setCommentUsername(state, action) {\n      state.commentdata.username = action.payload;\n    },\n    setUserComment(state, action) {\n      state.commentdata.comment = action.payload;\n    },\n    setCommentPostid(state, action) {\n      state.commentdata.postid = action.payload;\n    },\n    setCount(state, action) {\n      state.count = state.count++;\n    }\n  }\n});\nexport const commentActions = commentSlice.actions;\nexport const commentReducer = commentSlice.reducer;","map":{"version":3,"names":["createSlice","commentSlice","name","initialState","commentdata","id","username","comment","count","reducers","setCommentId","state","action","payload","setCommentUsername","setUserComment","setCommentPostid","postid","setCount","commentActions","actions","commentReducer","reducer"],"sources":["C:/Users/Manav/Desktop/social_connect/social_connect_app_frontend/src/store/CommentSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst commentSlice = createSlice(\r\n    {\r\n        name:\"comment\",\r\n        initialState:{commentdata:{id:0,username:\"\",\"postid\":10,comment:\"\",},count:0},\r\n        reducers:{\r\n            setCommentId(state,action){\r\n                state.commentdata.id = action.payload;\r\n            },\r\n            setCommentUsername(state,action){\r\n                state.commentdata.username = action.payload;\r\n            },\r\n            setUserComment(state,action){\r\n                state.commentdata.comment = action.payload;\r\n            },\r\n            setCommentPostid(state,action){\r\n                state.commentdata.postid = action.payload;\r\n            },\r\n            setCount(state,action){\r\n                state.count = state.count ++\r\n            },\r\n\r\n\r\n        }\r\n        \r\n    }\r\n)\r\n\r\nexport const commentActions = commentSlice.actions;\r\nexport const commentReducer = commentSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAGD,WAAW,CAC5B;EACIE,IAAI,EAAC,SAAS;EACdC,YAAY,EAAC;IAACC,WAAW,EAAC;MAACC,EAAE,EAAC,CAAC;MAACC,QAAQ,EAAC,EAAE;MAAC,QAAQ,EAAC,EAAE;MAACC,OAAO,EAAC;IAAG,CAAC;IAACC,KAAK,EAAC;EAAC,CAAC;EAC7EC,QAAQ,EAAC;IACLC,YAAY,CAACC,KAAK,EAACC,MAAM,EAAC;MACtBD,KAAK,CAACP,WAAW,CAACC,EAAE,GAAGO,MAAM,CAACC,OAAO;IACzC,CAAC;IACDC,kBAAkB,CAACH,KAAK,EAACC,MAAM,EAAC;MAC5BD,KAAK,CAACP,WAAW,CAACE,QAAQ,GAAGM,MAAM,CAACC,OAAO;IAC/C,CAAC;IACDE,cAAc,CAACJ,KAAK,EAACC,MAAM,EAAC;MACxBD,KAAK,CAACP,WAAW,CAACG,OAAO,GAAGK,MAAM,CAACC,OAAO;IAC9C,CAAC;IACDG,gBAAgB,CAACL,KAAK,EAACC,MAAM,EAAC;MAC1BD,KAAK,CAACP,WAAW,CAACa,MAAM,GAAGL,MAAM,CAACC,OAAO;IAC7C,CAAC;IACDK,QAAQ,CAACP,KAAK,EAACC,MAAM,EAAC;MAClBD,KAAK,CAACH,KAAK,GAAGG,KAAK,CAACH,KAAK,EAAG;IAChC;EAGJ;AAEJ,CAAC,CACJ;AAED,OAAO,MAAMW,cAAc,GAAGlB,YAAY,CAACmB,OAAO;AAClD,OAAO,MAAMC,cAAc,GAAGpB,YAAY,CAACqB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}