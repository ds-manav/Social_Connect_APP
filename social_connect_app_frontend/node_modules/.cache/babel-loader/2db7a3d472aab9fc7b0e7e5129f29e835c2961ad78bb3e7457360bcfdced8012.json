{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Manav\\\\Desktop\\\\social_connect\\\\social_connect_app_frontend\\\\src\\\\component\\\\Comment\\\\Comment.comonent.jsx\",\n  _s = $RefreshSig$();\nimport { PostAddSharp } from \"@material-ui/icons\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\nimport { commentActions } from \"../../store/CommentSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comment = props => {\n  _s();\n  const count = useSelector(state => state.comment.vcount);\n  console.log(props.keyval);\n  const location = useLocation();\n  const state = location.state;\n  console.log(state);\n  const commentdetails = useSelector(state => state.comment.commentdata);\n  const [comment, setComment] = useState();\n  const randomNumberInRange = (min, max) => {\n    return Math.round(Math.random() * (max - min + 1)) + min;\n  };\n  const handleInput = e => {\n    try {\n      setComment(e.target.value);\n      dispatch(commentActions.setUserComment(e.target.value));\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  async function handleSubmit() {\n    try {\n      await dispatch(commentActions.setCommentId(randomNumberInRange(1, 100)));\n      dispatch(commentActions.setCommentUsername(\"iloveulaav\"));\n      await dispatch(commentActions.setCommentPostid(state));\n      const commenturl = `http://localhost:8000/api/comments/`;\n      const commentdata1 = await axios.post(commenturl, commentdetails).then(response => {\n        console.log(response.status);\n      });\n      console.log(commentdetails);\n    } catch (e) {\n      console.log(e);\n    }\n  }\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal__question\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: val1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"asked by\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"name\",\n            children: props.dynData ? post.username : post.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this), \" \", \"\", \"on\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"name\",\n            children: new Date().getDate()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal__answer\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: commentdetails.comment,\n          onChange: e => {\n            dispatch(commentActions.setCommentPostId(state));\n            dispatch(commentActions.setUserComment(e.target.value));\n            dispatch(commentActions.setCommentPostId(2));\n            setComment(e.target.value);\n          },\n          placeholder: \"Enter Your Answer\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal__button\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cancle\",\n          onClick: () => setIsModalOpen(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"sumbit\",\n          onClick: handleComment,\n          className: \"add\",\n          children: \"Add Answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(Comment, \"n8bh1NbOABzTRgFV/jILTb/BoAc=\", false, function () {\n  return [useSelector, useLocation, useSelector, useDispatch];\n});\n_c = Comment;\nexport default Comment;\nvar _c;\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"names":["PostAddSharp","axios","useEffect","useState","useDispatch","useSelector","useLocation","commentActions","Comment","props","count","state","comment","vcount","console","log","keyval","location","commentdetails","commentdata","setComment","randomNumberInRange","min","max","Math","round","random","handleInput","e","target","value","dispatch","setUserComment","handleSubmit","setCommentId","setCommentUsername","setCommentPostid","commenturl","commentdata1","post","then","response","status","val1","dynData","username","email","Date","getDate","setCommentPostId","setIsModalOpen","handleComment"],"sources":["C:/Users/Manav/Desktop/social_connect/social_connect_app_frontend/src/component/Comment/Comment.comonent.jsx"],"sourcesContent":["import { PostAddSharp } from \"@material-ui/icons\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { commentActions } from \"../../store/CommentSlice\";\r\n\r\n\r\n\r\nconst Comment = (props) => {\r\nconst count = useSelector((state)=>state.comment.vcount)\r\nconsole.log(props.keyval);\r\nconst location = useLocation();\r\nconst state = location.state;\r\nconsole.log(state)\r\n\r\nconst commentdetails = useSelector((state)=>state.comment.commentdata)\r\n\r\nconst [comment,setComment] = useState();\r\nconst randomNumberInRange=(min, max)=> {\r\n  return Math.round(Math.random() * (max - min + 1)) + min;\r\n}\r\nconst handleInput = (e)=>{\r\n    try{\r\n      setComment(e.target.value)\r\n      dispatch(commentActions.setUserComment(e.target.value));\r\n    }\r\n    catch(e){\r\n      console.log(e);\r\n    }\r\n}\r\n\r\n  async function handleSubmit() {\r\n    try {\r\n      await dispatch(commentActions.setCommentId(randomNumberInRange(1,100)));\r\n      dispatch(commentActions.setCommentUsername(\"iloveulaav\"));\r\n      await dispatch(commentActions.setCommentPostid(state));\r\n      const  commenturl = `http://localhost:8000/api/comments/`;\r\n      const commentdata1 = await axios.post(commenturl,commentdetails).then(response => {\r\n            console.log(response.status);\r\n      })\r\n      console.log(commentdetails);\r\n    }\r\n    catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\nconst dispatch = useDispatch();\r\n\r\n  return (\r\n    <div >\r\n      <div>\r\n      <div className=\"modal__question\">\r\n              <h1>{val1}</h1>\r\n              <p>\r\n                asked by{\" \"}\r\n                <span className=\"name\">\r\n                   {props.dynData ? post.username : post.email} \r\n                </span>{\" \"}\r\n                {\"\"}\r\n                on{\" \"}\r\n                <span className=\"name\">\r\n                  {new Date().getDate()} \r\n                </span>\r\n              </p>\r\n            </div>\r\n            <div className=\"modal__answer\">\r\n              <textarea\r\n                value={commentdetails.comment}\r\n                onChange={(e) =>{ \r\n                  dispatch(commentActions.setCommentPostId(state));\r\n                  dispatch(commentActions.setUserComment(e.target.value));\r\n                  dispatch(commentActions.setCommentPostId(2));\r\n                  setComment(e.target.value)\r\n                }}\r\n                placeholder=\"Enter Your Answer\"\r\n                type=\"text\"\r\n              />\r\n              {/* {console.log(commentdetails)} */}\r\n            </div>\r\n            <div className=\"modal__button\">\r\n              <button className=\"cancle\" onClick={() => setIsModalOpen(false)}>\r\n                Cancel\r\n              </button>\r\n              <button type=\"sumbit\" onClick={handleComment} className=\"add\">\r\n                Add Answer\r\n              </button>\r\n            </div>\r\n      </div>\r\n      \r\n    </div>\r\n  )\r\n}\r\nexport default Comment;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}