{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst RegestrationSlice = createSlice({\n  name: \"regestraion\",\n  initialState: {\n    userdata: {\n      id: 0,\n      username: \"\",\n      email: \"\",\n      password: \"\"\n    },\n    commentdata: {\n      id: 0,\n      username: \"\",\n      postid: 10,\n      comment: \"\"\n    },\n    vcount: 0\n  },\n  reducers: {\n    setUsername(state, action) {\n      state.userdata.username = action.payload;\n    },\n    setUseremail(state, action) {\n      state.userdata.email = action.payload;\n    },\n    setUserPassword(state, action) {\n      state.userdata.password = action.payload;\n    },\n    setUserid(state, action) {\n      state.userdata.id = action.payload;\n    },\n    setCommentId(state, action) {\n      state.commentdata['id'] = action.payload;\n    },\n    setCommentUsername(state, action) {\n      state.commentdata.username = action.payload;\n    },\n    setUserComment(state, action) {\n      state.commentdata.comment = action.payload;\n    },\n    setCommentPostid(state, action) {\n      state.commentdata.postid = action.payload;\n    },\n    setCount(state, action) {\n      state[\"vcount\"] = state[\"vcount\"] + 1;\n    }\n  }\n});\nexport const regestrationActions = RegestrationSlice.actions;\nexport const resgestrationReducer = RegestrationSlice.reducer;\nexport const regSlice = RegestrationSlice;","map":{"version":3,"names":["createSlice","RegestrationSlice","name","initialState","userdata","id","username","email","password","commentdata","postid","comment","vcount","reducers","setUsername","state","action","payload","setUseremail","setUserPassword","setUserid","setCommentId","setCommentUsername","setUserComment","setCommentPostid","setCount","regestrationActions","actions","resgestrationReducer","reducer","regSlice"],"sources":["C:/Users/Manav/Desktop/social_connect/social_connect_app_frontend/src/store/RegestrationSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst RegestrationSlice = createSlice(\r\n    {\r\n        name:\"regestraion\",\r\n        initialState:{userdata:{id:0,username:\"\",email:\"\",password:\"\"},commentdata:{id:0,username:\"\",postid:10,comment:\"\",},\r\n        vcount:0},\r\n        reducers:{\r\n            setUsername(state,action){\r\n                state.userdata.username = action.payload;\r\n            },\r\n            setUseremail(state,action){\r\n                state.userdata.email = action.payload;\r\n            },\r\n            setUserPassword(state,action){\r\n                state.userdata.password = action.payload;\r\n            },\r\n            setUserid(state,action){\r\n                state.userdata.id = action.payload;\r\n            },\r\n            setCommentId(state,action){\r\n                state.commentdata['id'] = action.payload;\r\n            },\r\n            setCommentUsername(state,action){\r\n                state.commentdata.username = action.payload;\r\n            },\r\n            setUserComment(state,action){\r\n                state.commentdata.comment = action.payload;\r\n            },\r\n            setCommentPostid(state,action){\r\n                state.commentdata.postid = action.payload;\r\n            },\r\n            setCount(state,action){\r\n                state[\"vcount\"] = state[\"vcount\"] + 1;\r\n            },\r\n\r\n\r\n        }\r\n        \r\n    }\r\n)\r\n\r\nexport const regestrationActions = RegestrationSlice.actions;\r\nexport const resgestrationReducer = RegestrationSlice.reducer;\r\nexport const regSlice = RegestrationSlice;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,iBAAiB,GAAGD,WAAW,CACjC;EACIE,IAAI,EAAC,aAAa;EAClBC,YAAY,EAAC;IAACC,QAAQ,EAAC;MAACC,EAAE,EAAC,CAAC;MAACC,QAAQ,EAAC,EAAE;MAACC,KAAK,EAAC,EAAE;MAACC,QAAQ,EAAC;IAAE,CAAC;IAACC,WAAW,EAAC;MAACJ,EAAE,EAAC,CAAC;MAACC,QAAQ,EAAC,EAAE;MAACI,MAAM,EAAC,EAAE;MAACC,OAAO,EAAC;IAAG,CAAC;IACnHC,MAAM,EAAC;EAAC,CAAC;EACTC,QAAQ,EAAC;IACLC,WAAW,CAACC,KAAK,EAACC,MAAM,EAAC;MACrBD,KAAK,CAACX,QAAQ,CAACE,QAAQ,GAAGU,MAAM,CAACC,OAAO;IAC5C,CAAC;IACDC,YAAY,CAACH,KAAK,EAACC,MAAM,EAAC;MACtBD,KAAK,CAACX,QAAQ,CAACG,KAAK,GAAGS,MAAM,CAACC,OAAO;IACzC,CAAC;IACDE,eAAe,CAACJ,KAAK,EAACC,MAAM,EAAC;MACzBD,KAAK,CAACX,QAAQ,CAACI,QAAQ,GAAGQ,MAAM,CAACC,OAAO;IAC5C,CAAC;IACDG,SAAS,CAACL,KAAK,EAACC,MAAM,EAAC;MACnBD,KAAK,CAACX,QAAQ,CAACC,EAAE,GAAGW,MAAM,CAACC,OAAO;IACtC,CAAC;IACDI,YAAY,CAACN,KAAK,EAACC,MAAM,EAAC;MACtBD,KAAK,CAACN,WAAW,CAAC,IAAI,CAAC,GAAGO,MAAM,CAACC,OAAO;IAC5C,CAAC;IACDK,kBAAkB,CAACP,KAAK,EAACC,MAAM,EAAC;MAC5BD,KAAK,CAACN,WAAW,CAACH,QAAQ,GAAGU,MAAM,CAACC,OAAO;IAC/C,CAAC;IACDM,cAAc,CAACR,KAAK,EAACC,MAAM,EAAC;MACxBD,KAAK,CAACN,WAAW,CAACE,OAAO,GAAGK,MAAM,CAACC,OAAO;IAC9C,CAAC;IACDO,gBAAgB,CAACT,KAAK,EAACC,MAAM,EAAC;MAC1BD,KAAK,CAACN,WAAW,CAACC,MAAM,GAAGM,MAAM,CAACC,OAAO;IAC7C,CAAC;IACDQ,QAAQ,CAACV,KAAK,EAACC,MAAM,EAAC;MAClBD,KAAK,CAAC,QAAQ,CAAC,GAAGA,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC;IACzC;EAGJ;AAEJ,CAAC,CACJ;AAED,OAAO,MAAMW,mBAAmB,GAAGzB,iBAAiB,CAAC0B,OAAO;AAC5D,OAAO,MAAMC,oBAAoB,GAAG3B,iBAAiB,CAAC4B,OAAO;AAC7D,OAAO,MAAMC,QAAQ,GAAG7B,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}